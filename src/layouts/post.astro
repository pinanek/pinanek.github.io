---
import BaseLayout from "./base.astro";
import Header from "@/components/header";
import Footer from "@/components/footer";
import { PostHeader, PostTableOfContent } from "@/components/post";
import type { MarkdownHeading } from "astro";
import type { CollectionEntry } from "astro:content";
import "@/styles/highlighter.css";

interface Props {
  frontmatter: CollectionEntry<"posts">["data"];
  headings: MarkdownHeading[];
}

const {
  frontmatter: { title, seoTitle, description, tableOfContent },
  headings,
} = Astro.props as Props;

const isShowTableOfContent = tableOfContent !== false;
---

<BaseLayout
  head={{
    title,
    seoTitle,
    description,
  }}
>
  <Header />
  <main class:list={["page-spacing", isShowTableOfContent ? "content-with-toc-sizing" : "content-without-toc-sizing"]}>
    <PostHeader frontmatter={Astro.props.frontmatter} />
    <div class="post-content-container" id="post-content-container">
      {
        isShowTableOfContent && (
          <div class="table-of-content-container">
            <h2>Table of content</h2>
            <PostTableOfContent headings={headings} />
          </div>
        )
      }
      <article>
        <slot />
      </article>
    </div>
  </main>
  <Footer />
</BaseLayout>

<style>
  main {
    margin-top: var(--spacing-20);
  }

  .content-with-toc-sizing {
    max-width: 78rem;
  }

  .content-without-toc-sizing {
    max-width: 53rem;
  }

  .post-content-container {
    display: flex;
    flex-direction: column;
    gap: var(--spacing-12);
    margin-top: var(--spacing-8);
    margin-bottom: var(--spacing-4);
  }

  @media (--lg) {
    .post-content-container {
      flex-direction: row-reverse;
      justify-content: space-between;
      align-items: flex-start;
    }
  }

  .post-content-container :global(::-webkit-scrollbar) {
    width: var(--spacing-1);
    height: var(--spacing-1);
  }

  .post-content-container :global(::-webkit-scrollbar-thumb) {
    border-radius: 0;
  }

  .post-content-container h2 {
    transition: color var(--duration-default) var(--ease-in-out);
  }

  .table-of-content-container {
    position: block;
    display: flex;
    flex-direction: column;
    gap: var(--spacing-3);
  }

  @media (--lg) {
    .table-of-content-container {
      position: sticky;
      top: 8.5rem;
    }
  }

  article {
    width: 100%;
    min-width: 0;
  }
</style>
