---
import TableOfContent from '@/components/post/table-of-content'
import PostHeader from '@/components/post/post-header.astro'
import PostContent from '@/components/post/post-content.astro'
import type { PostFrontMatter, PostHeaders } from '@/types/post'

export interface Props extends PostFrontMatter {
  headers?: PostHeaders
}

const { headers, ...fronmatter } = Astro.props as Props
---

<div
  class:list={['container', 'content-spacing', headers !== undefined ? ['content-sizing'] : 'container-without-toc']}
>
  <PostHeader {...fronmatter} />
  <div class:list={['content-container', headers !== undefined && 'content-container-with-toc']}>
    {headers !== undefined && <TableOfContent client:load headers={headers} class="toc" />}
    <PostContent class='content'>
      <slot></slot>
    </PostContent>
  </div>
</div>

<style lang='scss'>
  @use 'src/styles/abstracts/mixins' as *;

  .container {
    margin-top: 3rem;
    margin-bottom: 3rem;

    --paragraph-line-height: calc(1em + 0.75rem);
  }

  .container-without-toc {
    max-width: 53rem;
  }

  .content-container {
    margin-top: 1rem;
    margin-bottom: 1rem;
  }

  .content-container-with-toc {
    display: flex;
    align-items: flex-start;
    flex-direction: column;
    gap: 1rem;

    @include responsive(lg) {
      flex-direction: row-reverse;
      gap: 4rem;
    }
  }

  .toc {
    flex-grow: 1;
    flex-shrink: 0;
    margin-top: 1.75rem;
  }

  .content {
    width: 100%;
    min-width: 0;
  }
</style>
