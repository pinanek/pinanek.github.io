---
import PostLayout from '@/layouts/post-layout.astro'
import Content from '@/components/content/content.astro'
import type { GetStaticPaths } from 'astro'
import type { Post, PostFrontmatter } from '@/types/post'

export const getStaticPaths: GetStaticPaths = async () => {
  // Default MarkdownInstance type is for Astro-flavored markdown, and some of properties type are incorrect
  const posts = (await Astro.glob<PostFrontmatter>('/src/content/posts/{*,**/index}.mdx')) as Post[]

  const data = posts.map(async ({ default: MdxComponent, frontmatter, url }) => {
    const slug = url
      .replace(/\/index.mdx$/, '')
      .split(/[/\\]/)
      .pop()

    return {
      params: { slug },
      props: {
        MdxComponent,
        frontmatter
      }
    }
  })

  return Promise.all(data)
}

interface Props {
  MdxComponent: Post['default']
  frontmatter: Post['frontmatter']
}

const { MdxComponent, frontmatter } = Astro.props as Props
---

<PostLayout
  head={{
    title: frontmatter.title,
    seoTitle: frontmatter.seoTitle,
    description: frontmatter.description,
    imageSrc: frontmatter.image.url,
    imageAlt: frontmatter.image.alt
  }}
>
  <Content MdxComponent={MdxComponent} />
</PostLayout>
